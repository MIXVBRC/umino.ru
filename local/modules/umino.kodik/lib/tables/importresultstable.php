<?php


namespace Umino\Kodik\Tables;

use Bitrix\Main;
use Bitrix\Main\Type\DateTime;

/**
 * Class ImportResultsTable
 *
 * Fields:
 * <ul>
 * <li> ID int
 * <li> XML_ID string
 * <li> ACTIVE boolean
 * <li> DATE_CREATE datetime
 * <li> DATE_UPDATE datetime
 * <li> IMPORT_ID int
 * <li> RESULTS string
 * </ul>
 *
 * @package Umino\Kodik\Tables
 **/
class ImportResultsTable extends Main\Entity\DataManager
{
    /**
     * Returns DB table name for entity.
     *
     * @return string
     */
    public static function getTableName()
    {
        return 'umino_kodik_import_result';
    }

    /**
     * Returns entity map definition.
     *
     * @return array
     */
    public static function getMap()
    {
        return [
            new Main\Entity\IntegerField('ID', [
                'primary' => true,
                'autocomplete' => true,
            ]),
            new Main\Entity\StringField('XML_ID', [
                'required' => true,
            ]),
            new Main\Entity\DatetimeField('DATE_CREATE', [
                'required' => true,
                'default_value' => function () {
                    return new Main\Type\DateTime();
                }
            ]),
            new Main\Entity\DatetimeField('DATE_UPDATE', [
                'required' => true,
                'default_value' => function () {
                    return new Main\Type\DateTime();
                }
            ]),
            new Main\Entity\IntegerField('IMPORT_ID', [
                'required' => true,
            ]),
            new Main\Entity\TextField('RESULTS', [
                'required' => true,
                'serialized' => true,
            ]),

            new Main\Entity\ReferenceField(
                'IMPORT',
                ImportTable::class,
                ['=this.IMPORT_ID' => 'ref.ID'],
                ['join_type' => 'LEFT']
            ),
        ];
    }

    public static function getByXmlId(string $xml_id)
    {
        return self::getList([
            'filter' => ['XML_ID' => $xml_id],
            'limit' => 1,
        ])->fetch();
    }

    public static function update($primary, array $data)
    {
        $data['DATE_UPDATE'] = new DateTime();
        return parent::update($primary, $data); // TODO: Change the autogenerated stub
    }
}
create table if not exists umino_anime_log (
  ID int(18) not null auto_increment,
  DATE_CREATE datetime not null default current_timestamp,
  FILE varchar(255) not null,
  LINE varchar(255) not null,
  MESSAGE text not null,
  primary key (ID));

create table if not exists umino_anime_episodes (
   ID int(18) not null auto_increment,
   ACTIVE varchar(1),
   NAME varchar(255) not null,
   XML_ID varchar(32) not null,
   SERIAL_XML_ID varchar(32) not null,
   TRANSLATION_XML_ID varchar(32) not null,
   SEASON int(18),
   ANIME_LINK varchar(255),
   SEASON_LINK varchar(255),
   EPISODES mediumtext,
   EPISODES_COUNT int(18),
   TYPE varchar(255),
   QUALITY varchar(255),
   KODIK_TYPE varchar(255),
   KODIK_ID varchar(255),
   DATE_CREATE datetime not null default current_timestamp,
   DATE_UPDATE datetime not null default current_timestamp on update current_timestamp,
   primary key (ID),
   index index_xml_id (XML_ID),
   index index_serial (SERIAL_XML_ID),
   index index_translation (TRANSLATION_XML_ID));

# create table if not exists umino_anime_result (
#    ID int(18) not null auto_increment,
#    KODIK_ID varchar(255),
#    DATE_CREATE datetime not null default current_timestamp,
#    DATE_UPDATE datetime not null default current_timestamp on update current_timestamp,
#    DATE_IMPORT datetime,
#    TYPE varchar(255) not null default 'unknown',
#    LINK varchar(255) not null,
#    TITLE varchar(255) not null,
#    TITLE_ORIG varchar(255),
#    OTHER_TITLE text,
#    TRANSLATION text not null,
#    YEAR varchar(255),
#    LAST_SEASON int(18) default 1,
#    LAST_EPISODE int(18) default 1,
#    EPISODES_COUNT int(18) default 1,
#    KINOPOISK_ID varchar(255),
#    WORLDART_LINK varchar(255),
#    SHIKIMORI_ID varchar(255),
#    QUALITY varchar(255),
#    CAMRIP varchar(255),
#    LGBT varchar(255),
#    BLOCKED_COUNTRIES text,
#    BLOCKED_SEASONS text,
#    CREATED_AT datetime,
#    UPDATED_AT datetime,
#    SCREENSHOTS text,
#    REQUEST_ID int(18) not null,
#    primary key (ID));